steps:
  # Step 1: Build Docker image using Kaniko
  - name: "gcr.io/kaniko-project/executor:latest"
    id: "Build-Docker-Image"
    args:
      - "--destination=$_LOCATION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/email-parser:$SHORT_SHA"
      - "--cache=true"
      - "--cache-repo=$_LOCATION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/cache"
      - "--cache-ttl=48h"
      - "--context=dir://./"

  # Step 2: Deploy to Cloud Run
  - name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
    id: "Deploy-To-Cloud-Run"
    waitFor: ["Build-Docker-Image"]
    args:
      [
        "run", "deploy", "email-parser",
        "--image=$_LOCATION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/email-parser:$SHORT_SHA",
        "--region=us-central1",
        "--platform=managed",
        "--no-allow-unauthenticated",
        "--service-account=intake-tool-sa@forensicemailparser.iam.gserviceaccount.com",
      ]
    secretEnv:
      - GEMINI_API_KEY
      - GMAIL_API_KEY
      - GOOGLE_APPLICATION_CREDENTIALS
      - BIGQUERY_PROJECT_ID
      - BIGQUERY_DATASET
      - EMAIL_ATTACHMENT_BUCKET
      - GCP_LOCATION
      - GCP_PROJECT_ID
      - GEMINI_ENDPOINT
      - GEMINI_MODEL_NAME
      - LOG_FILE
      - ATTACHMENT_OCR_PROCESSOR_ID
      - ATTACHMENT_OCR_REGION
      - QUICKBASE_API_TOKEN

# Specify secrets to load
availableSecrets:
  secretManager:
    - versionName: "projects/$PROJECT_ID/secrets/ATTACHMENT_OCR_PROCESSOR_ID/versions/latest"
      env: "ATTACHMENT_OCR_PROCESSOR_ID"
    - versionName: "projects/$PROJECT_ID/secrets/ATTACHMENT_OCR_REGION/versions/latest"
      env: "ATTACHMENT_OCR_REGION"
    - versionName: "projects/$PROJECT_ID/secrets/BIGQUERY_DATASET/versions/latest"
      env: "BIGQUERY_DATASET"
    - versionName: "projects/$PROJECT_ID/secrets/BIGQUERY_PROJECT_ID/versions/latest"
      env: "BIGQUERY_PROJECT_ID"
    - versionName: "projects/$PROJECT_ID/secrets/EMAIL_ATTACHMENT_BUCKET/versions/latest"
      env: "EMAIL_ATTACHMENT_BUCKET"
    - versionName: "projects/$PROJECT_ID/secrets/GCP_LOCATION/versions/latest"
      env: "GCP_LOCATION"
    - versionName: "projects/$PROJECT_ID/secrets/GCP_PROJECT_ID/versions/latest"
      env: "GCP_PROJECT_ID"
    - versionName: "projects/$PROJECT_ID/secrets/GEMINI_ENDPOINT/versions/latest"
      env: "GEMINI_ENDPOINT"
    - versionName: "projects/$PROJECT_ID/secrets/GEMINI_MODEL_NAME/versions/latest"
      env: "GEMINI_MODEL_NAME"
    - versionName: "projects/$PROJECT_ID/secrets/GOOGLE_APPLICATION_CREDENTIALS/versions/latest"
      env: "GOOGLE_APPLICATION_CREDENTIALS"
    - versionName: "projects/$PROJECT_ID/secrets/LOG_FILE/versions/latest"
      env: "LOG_FILE"
    - versionName: "projects/$PROJECT_ID/secrets/gemini-api-key/versions/latest"
      env: "GEMINI_API_KEY"
    - versionName: "projects/$PROJECT_ID/secrets/gmail-api-key/versions/latest"
      env: "GMAIL_API_KEY"
    - versionName: "projects/$PROJECT_ID/secrets/intake-tool-quickbase-token/versions/latest"
      env: "QUICKBASE_API_TOKEN"

# Images to push
images:
  - "$_LOCATION-docker.pkg.dev/$PROJECT_ID/$_REPOSITORY/email-parser:$SHORT_SHA"

# Logs bucket for build logs
logsBucket: "gs://forensicemailparser-build-logs"

# Cloud Logging integration
logging:
  logSource: "CLOUD_BUILD"
  logName: "build-log-email-parser"

# Build timeout
timeout: "1200s"
