steps:
# Build the Docker image
- name: "gcr.io/cloud-builders/docker"
  args: ["build", "-t", "gcr.io/$PROJECT_ID/email-parser:$SHORT_SHA", "."]

# Push the Docker image to Container Registry
- name: "gcr.io/cloud-builders/docker"
  args: ["push", "gcr.io/$PROJECT_ID/email-parser:$SHORT_SHA"]

# Retrieve GEMINI_API_KEY from Secret Manager and deploy to Cloud Run
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      GEMINI_API_KEY=$(gcloud secrets versions access latest --secret=gemini-api-key) && \
      gcloud run deploy email-parser \
        --image gcr.io/$PROJECT_ID/email-parser:$SHORT_SHA \
        --region us-central1 \
        --platform managed \
        --no-allow-unauthenticated \
        --set-env-vars=GCP_PROJECT_ID=$PROJECT_ID,GEMINI_API_KEY=$GEMINI_API_KEY

# Grant access to specific users or service accounts
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      gcloud run services add-iam-policy-binding email-parser \
        --region us-central1 \
        --member="user:jvonborstel@keystoneexperts.com" \
        --role="roles/run.invoker"

# Set up monitoring/logging
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      gcloud logging write test-log "Cloud Run service successfully deployed" \
        --severity=INFO

# Specify the logs bucket
options:
  logging: CLOUD_LOGGING_ONLY

images:
- "gcr.io/$PROJECT_ID/email-parser:$SHORT_SHA"
