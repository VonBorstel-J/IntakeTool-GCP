steps:
# Build the Docker image
- name: "gcr.io/cloud-builders/docker"
  args: ["build", "-t", "gcr.io/$PROJECT_ID/email-parser:$SHORT_SHA", "."]

# Push the Docker image to Container Registry
- name: "gcr.io/cloud-builders/docker"
  args: ["push", "gcr.io/$PROJECT_ID/email-parser:$SHORT_SHA"]

# Deploy to Cloud Run with GEMINI_API_KEY securely injected
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      echo "Deploying to Cloud Run..."
      GEMINI_API_KEY=$(cat /secrets/gemini-api-key) || { echo "Failed to retrieve GEMINI_API_KEY"; exit 1; }
      gcloud run deploy email-parser \
        --image gcr.io/$PROJECT_ID/email-parser:$SHORT_SHA \
        --region us-central1 \
        --platform managed \
        --no-allow-unauthenticated \
        --service-account="intake-tool-sa@forensicemailparser.iam.gserviceaccount.com" \
        --set-env-vars=GEMINI_API_KEY="$GEMINI_API_KEY"

# Log a success message
- name: "gcr.io/google.com/cloudsdktool/cloud-sdk"
  entrypoint: "bash"
  args:
    - "-c"
    - |
      echo "Writing success log..."
      gcloud logging write test-log "Cloud Run service successfully deployed" \
        --severity=INFO

# Specify Cloud Logging for build logs
options:
  logging: GCS_ONLY

# Images to push
images:
- "gcr.io/$PROJECT_ID/email-parser:$SHORT_SHA"

# Specify Secrets
availableSecrets:
  secretManager:
  - versionName: "projects/$PROJECT_ID/secrets/gemini-api-key/versions/latest"
    mountPath: "/secrets"

# Logs bucket
logsBucket: "gs://forensicemailparser-build-logs"
